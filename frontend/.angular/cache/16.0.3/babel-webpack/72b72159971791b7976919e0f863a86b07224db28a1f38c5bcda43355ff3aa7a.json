{"ast":null,"code":"import { BehaviorSubject, tap } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass TodoService {\n  constructor(_http) {\n    this._http = _http;\n    this.baseUrl = \"https://jsonplaceholder.typicode.com/todos\";\n    this.todoBS$ = new BehaviorSubject(this.todoList);\n    this.todoList$ = this.todoBS$.asObservable();\n  }\n  fetchAll() {\n    return this._http.get(this.baseUrl).pipe(tap(e => {\n      this.todoList = e.filter(e => e.completed != true);\n      this.todoBS$.next(this.todoList);\n    }));\n  }\n  postRequest(data) {\n    this.todoList = this.todoList.filter(e => e.id !== data.id);\n    return this.todoBS$.next(this.todoList);\n  }\n}\nTodoService.ɵfac = function TodoService_Factory(t) {\n  return new (t || TodoService)(i0.ɵɵinject(i1.HttpClient));\n};\nTodoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TodoService,\n  factory: TodoService.ɵfac,\n  providedIn: \"root\"\n});\nexport { TodoService };","map":{"version":3,"names":["BehaviorSubject","tap","TodoService","constructor","_http","baseUrl","todoBS$","todoList","todoList$","asObservable","fetchAll","get","pipe","e","filter","completed","next","postRequest","data","id","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\khant\\OneDrive\\Desktop\\todoAppLaravel\\frontend\\src\\app\\core\\services\\todo.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Todo } from \"../interfaces/todo\";\r\nimport { BehaviorSubject, tap } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class TodoService {\r\n  private baseUrl: string = \"https://jsonplaceholder.typicode.com/todos\";\r\n  private todoList!: Todo[];\r\n  private todoBS$ = new BehaviorSubject(this.todoList);\r\n  todoList$ = this.todoBS$.asObservable();\r\n\r\n  constructor(private readonly _http: HttpClient) {}\r\n\r\n  public fetchAll() {\r\n    return this._http.get(this.baseUrl).pipe(\r\n      tap((e: any) => {\r\n        this.todoList = e.filter((e: any) => e.completed != true);\r\n        this.todoBS$.next(this.todoList);\r\n      })\r\n    );\r\n  }\r\n\r\n  public postRequest(data: any) {\r\n    this.todoList = this.todoList.filter((e: any) => e.id !== data.id);\r\n    return this.todoBS$.next(this.todoList);\r\n  }\r\n}\r\n"],"mappings":"AAGA,SAASA,eAAe,EAAEC,GAAG,QAAQ,MAAM;;;AAE3C,MAGaC,WAAW;EAMtBC,YAA6BC,KAAiB;IAAjB,KAAAA,KAAK,GAALA,KAAK;IAL1B,KAAAC,OAAO,GAAW,4CAA4C;IAE9D,KAAAC,OAAO,GAAG,IAAIN,eAAe,CAAC,IAAI,CAACO,QAAQ,CAAC;IACpD,KAAAC,SAAS,GAAG,IAAI,CAACF,OAAO,CAACG,YAAY,EAAE;EAEU;EAE1CC,QAAQA,CAAA;IACb,OAAO,IAAI,CAACN,KAAK,CAACO,GAAG,CAAC,IAAI,CAACN,OAAO,CAAC,CAACO,IAAI,CACtCX,GAAG,CAAEY,CAAM,IAAI;MACb,IAAI,CAACN,QAAQ,GAAGM,CAAC,CAACC,MAAM,CAAED,CAAM,IAAKA,CAAC,CAACE,SAAS,IAAI,IAAI,CAAC;MACzD,IAAI,CAACT,OAAO,CAACU,IAAI,CAAC,IAAI,CAACT,QAAQ,CAAC;IAClC,CAAC,CAAC,CACH;EACH;EAEOU,WAAWA,CAACC,IAAS;IAC1B,IAAI,CAACX,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACO,MAAM,CAAED,CAAM,IAAKA,CAAC,CAACM,EAAE,KAAKD,IAAI,CAACC,EAAE,CAAC;IAClE,OAAO,IAAI,CAACb,OAAO,CAACU,IAAI,CAAC,IAAI,CAACT,QAAQ,CAAC;EACzC;;AApBWL,WAAW,C;mBAAXA,WAAW,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXrB,WAAW,C;SAAXA,WAAW;EAAAsB,OAAA,EAAXtB,WAAW,CAAAuB,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPxB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}